Elm.Repl = Elm.Repl || {};
Elm.Repl.make = function (_elm) {
   "use strict";
   _elm.Repl = _elm.Repl || {};
   if (_elm.Repl.values)
   return _elm.Repl.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Repl",
   $Basics = Elm.Basics.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Random = Elm.Random.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var x = A2($Random.$int,1,6);
   var tsol = {ctor: "_Tuple0"};
   var rnd = function (sig) {
      return $Random.$float(sig);
   };
   var deltron3030 = x;
   var coord = function (r) {
      return 400 * r - 200;
   };
   var randx = function (sig) {
      return A2($Signal.map,
      coord,
      sig);
   };
   _elm.Repl.values = {_op: _op
                      ,coord: coord
                      ,deltron3030: deltron3030
                      ,randx: randx
                      ,rnd: rnd
                      ,tsol: tsol
                      ,x: x};
   return _elm.Repl.values;
};